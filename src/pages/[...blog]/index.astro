---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsBlogPost, blogPostRobots } from '~/utils/blog';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';

export const prerender = true;

export const getStaticPaths = (async () => {
  return await getStaticPathsBlogPost();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props as Props;

const url = getCanonical(getPermalink(post.permalink, 'post'));
const image = (await findImage(post.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: post.title,
    description: post.excerpt,
    robots: {
      index: blogPostRobots?.index,
      follow: blogPostRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  { ...(post?.metadata ? { ...post.metadata, canonical: post.metadata?.canonical || url } : {}) }
) as MetaData;

// JSON-LD 구조화된 데이터 생성
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": post.title,
  "description": post.excerpt || post.title,
  "image": image ? (typeof image === 'string' ? image : image.src) : undefined,
  "url": url,
  "datePublished": post.publishDate?.toISOString(),
  "dateModified": post.updateDate?.toISOString() || post.publishDate?.toISOString(),
  "author": {
    "@type": "Person",
    "name": post.author || "SightStudio",
    "url": "https://sightstudio.github.io"
  },
  "publisher": {
    "@type": "Organization",
    "name": "SightStudio",
    "url": "https://sightstudio.github.io",
    "logo": {
      "@type": "ImageObject",
      "url": "https://sightstudio.github.io/images/logo.png"
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": url
  },
  "articleSection": post.category?.title,
  "keywords": post.tags?.map(tag => tag.title).join(', '),
  "timeRequired": `PT${post.readingTime || 1}M`
};
---

<Layout metadata={metadata}>
  <!-- JSON-LD 구조화된 데이터 -->
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  
  <SinglePost post={{ ...post, image: image }} url={url}>
    {post.Content ? <post.Content /> : <Fragment set:html={post.content || ''} />}
  </SinglePost>
  <ToBlogLink />
  <RelatedPosts post={post} />
</Layout>
